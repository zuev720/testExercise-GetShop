{"version":3,"sources":["store/phoneNumberReducer.js","store/keyBoard.js","store/screenKeyboardReducer.js","store/timeVideoReducer.js","store/validNumberReducer.js","store/index.js","components/promoPage/Banner.jsx","components/promoPage/PromoPage.jsx","components/screenKeyboardPage/ScreenKeyboard.jsx","components/screenKeyboardPage/ButtonConfirmNumber.jsx","components/screenKeyboardPage/AgreeCheckbox.jsx","components/screenKeyboardPage/Phone.jsx","components/screenKeyboardPage/Panel.jsx","components/screenKeyboardPage/CancelButton.jsx","components/screenKeyboardPage/ScreenKeyboardPage.jsx","components/sliderPage/SliderPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["phoneNumberReducer","createSlice","name","initialState","reducers","addNumber","state","action","push","payload","deleteNumber","pop","actions","keyBoardValues","screenKeyboardReducer","section","activeElem","arrowRightAction","Number","index","findIndex","elem","arrowLeftAction","arrowUpAction","includes","arrowDownAction","setActiveElement","setTimeVideo","requestValidNumber","createAsyncThunk","phoneNumber","rejectWithValue","a","fetch","response","status","Error","json","message","validNumberReducer","data","error","extraReducers","pending","fulfilled","rejected","rootReducer","combineReducers","timeVideo","timeVideoReducer","screenKeyboard","validNumber","store","configureStore","reducer","Banner","forwardRef","props","ref","history","useHistory","dispatch","useDispatch","useState","className","setClassName","useEffect","setTimeout","src","alt","onClick","time","current","getCurrentTime","toFixed","PromoPage","useSelector","useRef","width","height","url","muted","playing","loop","controls","ScreenKeyboard","focus","KeyboardKey","onMouseOver","onMouseDown","value","length","handleClick","map","ButtonConfirmNumber","disabled","setDisabled","checkedAgree","valid","AgreeCheckbox","setCheckedAgree","id","type","checked","onChange","Phone","setState","mask","forEach","replace","Panel","CancelButton","to","ScreenKeyboardPage","keyDownHandle","useCallback","e","key","isNaN","code","validRequest","join","document","addEventListener","removeEventListener","SliderPage","images","useMemo","image","setImage","buttonLeftClassName","setButtonLeftClassName","buttonRightClassName","setButtonRightClassName","countImages","handleLeftClick","handleRightClick","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5d7d43a1.chunk.js","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\n// Управляет состоянием номера телефона на странице с экранной клавиатурой\nconst phoneNumberReducer = createSlice({\n    name: 'phoneNumber',\n    initialState: [],\n    reducers: {\n        addNumber(state, action) {\n            state.push(action.payload);\n        },\n        deleteNumber(state, action) {\n            state.pop();\n        },\n    },\n});\n\n\nexport const {\n    addNumber,\n    deleteNumber,\n} = phoneNumberReducer.actions;\n\nexport default phoneNumberReducer.reducer;\n","export const keyBoardValues = [1, 2, 3, 4, 5, 6, 7, 8, 9, 'стереть', 0];","import {createSlice} from \"@reduxjs/toolkit\";\nimport {keyBoardValues} from \"./keyBoard\";\n\n// Управляет состоянием нажатий клавиш на странице с экранной клавиатурой\nconst screenKeyboardReducer = createSlice({\n    name: 'screenKeyboard',\n    initialState: {\n        section: 'keyboards',\n        activeElem: keyBoardValues[4],\n    },\n    reducers: {\n        arrowRightAction(state) {\n            if (state.section === 'keyboards') {\n                if (state.activeElem !== Number(0)) {\n                    const index = keyBoardValues.findIndex((elem) => elem === state.activeElem);\n                    state.activeElem = keyBoardValues[index + 1];\n                } else {\n                    state.action = 'radio';\n                    state.activeElem = 'Radio';\n                }\n            }\n        },\n\n        arrowLeftAction(state) {\n            if (state.section === 'keyboards') {\n                if (state.activeElem !== Number(1)) {\n                    const index = keyBoardValues.findIndex((elem) => elem === state.activeElem);\n                    state.activeElem = keyBoardValues[index - 1];\n                }\n            }\n            if (state.section === 'cancelButton') {\n                state.section = 'keyboards';\n                state.activeElem = keyBoardValues[4];\n            }\n        },\n\n        arrowUpAction(state) {\n            if (state.section === 'keyboards') {\n                const index = keyBoardValues.findIndex((elem) => elem === state.activeElem);\n                if ([4, 5, 6, 7, 8, 9].includes(state.activeElem)) {\n                    state.activeElem = keyBoardValues[index - 3];\n                }\n                if (state.activeElem === 'стереть' || state.activeElem === Number(0)) state.activeElem = keyBoardValues[index - 2];\n            }\n            if (state.section === 'radio') {\n                state.section = 'keyboards';\n                state.activeElem = keyBoardValues[10];\n            }\n            if (state.section === 'confirmNumber') {\n                state.section = 'radio';\n                state.activeElem = 'Radio';\n            }\n        },\n\n        arrowDownAction(state) {\n            if (state.section === 'keyboards') {\n                const index = keyBoardValues.findIndex((elem) => elem === state.activeElem);\n                if (state.activeElem === 'стереть' || state.activeElem === Number(0)) {\n                    state.section = 'radio';\n                    state.activeElem = 'Radio';\n                }\n                if (state.activeElem === 8 || state.activeElem === 9) state.activeElem = keyBoardValues[index + 2];\n                if ([1, 2, 3, 4, 5, 6, 7,].includes(state.activeElem)) state.activeElem = keyBoardValues[index + 3];\n                return state;\n            }\n            if (state.section === 'radio') {\n                state.section = 'confirmNumber';\n                state.activeElem = 'ButtonConfirmNumber';\n                return ;\n            }\n            if (state.section === 'confirmNumber') {\n                state.section = 'cancelButton';\n                state.activeElem = 'CancelButton';\n            }\n        },\n\n        setActiveElement(state, action) {\n            const {section, activeElem} = action.payload;\n            state.section = section;\n            state.activeElem = activeElem;\n        }\n    },\n});\n\n\nexport const {\n    arrowRightAction,\n    arrowLeftAction,\n    arrowUpAction,\n    arrowDownAction,\n    setActiveElement\n} = screenKeyboardReducer.actions;\n\nexport default screenKeyboardReducer.reducer;","import {createSlice} from \"@reduxjs/toolkit\";\n\n// Управляет состоянием видео на начальной странице\nconst phoneNumberReducer = createSlice({\n    name: 'timeVideo',\n    initialState: Number(0),\n    reducers: {\n        setTimeVideo(state, action) {\n            return action.payload;\n        },\n    },\n});\n\n\nexport const {\n    setTimeVideo,\n} = phoneNumberReducer.actions;\n\nexport default phoneNumberReducer.reducer;","import {createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\n\nexport const requestValidNumber = createAsyncThunk(\n    'requestValidNumber',\n    async (phoneNumber, rejectWithValue) => {\n        try {\n            const response = await fetch(`http://apilayer.net/api/validate?access_key=0b20ce13fbc2618ea70e15299bfd5ce6&number=${phoneNumber}&country_code=RU&format=1`);\n\n            if (response.status !== 200) {\n                throw new Error('Server Error!');\n            }\n            return await response.json();\n\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    }\n);\n\nconst validNumberReducer = createSlice({\n    name: 'validNumber',\n    initialState: {\n        data: null,\n        status: null,\n        error: null\n    },\n    reducers: {},\n    extraReducers: {\n        [requestValidNumber.pending]: (state) => {\n            state.status = 'loading';\n            state.error = null;\n        },\n        [requestValidNumber.fulfilled]: (state, action) => {\n            state.status = 'resolved';\n            state.data = action.payload;\n        },\n        [requestValidNumber.rejected]: (state, action) => {\n            state.error = action.payload;\n            state.status = 'rejected';\n        },\n    }\n});\n\nexport default validNumberReducer.reducer;","import {combineReducers, configureStore} from '@reduxjs/toolkit';\nimport phoneNumberReducer from './phoneNumberReducer'\nimport screenKeyboardReducer from \"./screenKeyboardReducer\";\nimport timeVideoReducer from \"./timeVideoReducer\";\nimport validNumberReducer from \"./validNumberReducer\";\n\nconst rootReducer = combineReducers({\n    timeVideo: timeVideoReducer,\n    phoneNumber: phoneNumberReducer,\n    screenKeyboard: screenKeyboardReducer,\n    validNumber: validNumberReducer,\n});\n\nexport const store = configureStore({\n    reducer: rootReducer,\n});","import React, {forwardRef, useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport {setTimeVideo} from \"../../store/timeVideoReducer\";\n\n\nexport const Banner = forwardRef((props, ref) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [className, setClassName] = useState('Banner');\n\n    useEffect(() => {\n        setTimeout(() => setClassName('Banner active'), 5000);\n    }, [className]);\n\n    // Здесь мы ловим сколько секунд прошло с начала просмотра и сохраняем его в redux\n    // затем осуществляем переход на следующую страницу\n    const handleClick = () => {\n        const time = ref.current.getCurrentTime();\n        dispatch(setTimeVideo(Number(time.toFixed(2))));\n        history.push('keyboard-screen');\n    };\n\n    return (\n        <div className={className}>\n            <div className={'bannerFrame'}>\n                <h5 className={'bannerHeader'}>исполните мечту вашего малыша! подарите ему собаку!</h5>\n                <img className={'qr-code'} src={'../qr-code.png'} alt=\"qr-code\"/>\n                <p className={'bannerText'}>Сканируйте QR-код или нажмите ОК</p>\n                <button className={'bannerButton'} onClick={handleClick}>ok</button>\n            </div>\n        </div>\n    )\n})","import React, {useRef} from \"react\";\nimport ReactPlayer from 'react-player/youtube'\nimport {Banner} from \"./Banner\";\nimport './css/index.css';\nimport {useSelector} from \"react-redux\";\n\nexport function PromoPage() {\n    // Время момента начала видео. Хранится в redux. Начальное значение 0.\n    const timeVideo = useSelector((state) => state.timeVideo);\n    const ref = useRef();\n\n    return(\n        <div className={'PromoPage'}>\n            <ReactPlayer\n                ref={ref}\n                className={'player'}\n                width={'100%'}\n                height={'100%'}\n                url={`https://www.youtube-nocookie.com/embed/M7FIvfx5J10?start=${timeVideo}&showinfo=0&modestbranding=1&iv_load_policy=3&fs=0&controls=0`}\n                muted={true}\n                playing={true}\n                loop={true}\n                controls={false}/>\n            <Banner ref={ref}/>\n        </div>\n    )\n}","import React, {useEffect, useRef} from \"react\";\nimport {addNumber, deleteNumber} from \"../../store/phoneNumberReducer\";\nimport {useDispatch} from \"react-redux\";\nimport {keyBoardValues} from \"../../store/keyBoard\";\nimport {setActiveElement} from \"../../store/screenKeyboardReducer\";\n\nexport function ScreenKeyboard(props) {\n    const dispatch = useDispatch();\n    const ref = useRef(null);\n    const {activeElem, phoneNumber} = props;\n\n    useEffect(() => {\n        if (ref.current !== null) ref.current.focus();\n    }, [activeElem]);\n\n    const handleClick = (value) => {\n        dispatch(setActiveElement({section: 'keyboards', activeElem: value}));\n        if (value === 'стереть') return dispatch(deleteNumber());\n        if (phoneNumber.length === 10) return;\n        dispatch(addNumber(value));\n    }\n\n    const KeyboardKey = (props) => {\n        return (\n            <button\n                ref={(props.elem === activeElem) ? ref : null}\n                className={(props.elem === activeElem) ? 'KeyboardKey keyActive' : 'KeyboardKey'}\n                onMouseOver={() => dispatch(setActiveElement({section: 'keyboards', activeElem: props.elem}))}\n                onMouseDown={() => handleClick(props.elem)}>{props.elem}</button>\n        )\n    }\n\n    return (\n        <div className={'ScreenKeyboard'}>\n            {keyBoardValues.map((elem) => <KeyboardKey key={elem} elem={elem}/>)}\n        </div>\n    )\n}","import React, {useEffect, useRef, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {setActiveElement} from \"../../store/screenKeyboardReducer\";\nimport {useDispatch} from \"react-redux\";\n\n// Изначально кнопка не активна. Она становиться активной, когда нашат checkbox и номер телефона содержит 10 цифр\nexport function ButtonConfirmNumber(props) {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [disabled, setDisabled] = useState(true);\n    const ref = useRef(null);\n    const {activeElem, checkedAgree, phoneNumber, valid} = props;\n\n    useEffect(() => {\n        if (checkedAgree && phoneNumber.length === 10 && valid !== false) {\n            setDisabled(false);\n        } else {\n            setDisabled(true);\n        }\n    }, [checkedAgree, phoneNumber.length, valid]);\n\n    useEffect(() => {\n        if (ref.current !== null) ref.current.focus();\n    }, [activeElem, disabled]);\n\n    const handleClick = () => {\n        history.push('/slider');\n    }\n\n    const handleMouseOver = () => {\n        if (!disabled && phoneNumber.length === 10) {\n            dispatch(setActiveElement({section: 'confirmNumber', activeElem: 'ButtonConfirmNumber'}))\n        }\n    }\n\n    return(\n        <button\n            ref={(activeElem === 'ButtonConfirmNumber' && !disabled) ? ref : null}\n            className={'ButtonConfirmNumber'}\n            onClick={handleClick}\n            onMouseOver={handleMouseOver}\n            disabled={disabled}>Подтвердить номер</button>\n    )\n}","import React, {useEffect, useRef} from 'react';\n\nexport function AgreeCheckbox(props) {\n    const ref = useRef(null);\n    const {activeElem, checkedAgree, setCheckedAgree} = props;\n\n    useEffect(() => {\n        if (ref.current !== null) ref.current.focus();\n    }, [activeElem]);\n\n    return (\n        <div className={'AgreeCheckbox'}>\n            <div className={'inputWrapper'}>\n                {(activeElem === 'Radio')\n                    ? < input\n                        ref={ref}\n                        id={'radio'}\n                        className={'radio'}\n                        type={'checkbox'}\n                        checked={checkedAgree}\n                        onChange={() => setCheckedAgree((!checkedAgree))}/>\n                    : < input id={'radio'}\n                              className={'radio'}\n                              type={'checkbox'}\n                              checked={checkedAgree}\n                              onChange={() => setCheckedAgree((!checkedAgree))}/>\n                }\n            </div>\n            <label className={'labelRadio'} onClick={() => setCheckedAgree((!checkedAgree))}>Согласие на обработку персональных данных</label>\n        </div>\n    )\n}\n","import React, {useEffect, useState} from \"react\";\n\nexport function Phone(props) {\n    const {phoneNumber, valid} = props;\n    const [state, setState] = useState('');\n    const [className, setClassName] = useState('phone');\n\n    useEffect(() => {\n        if (valid === false && phoneNumber.length === 10) {\n            setClassName('phone phoneError');\n        } else setClassName('phone');\n    }, [phoneNumber.length, valid]);\n\n    // Здесь мы подставляем маску номера телефона\n    useEffect(() => {\n        let mask = '+7(___)___-__-__';\n        phoneNumber.forEach((elem) => mask = mask.replace(/_/, elem));\n        setState(mask);\n    }, [phoneNumber]);\n\n    return(\n        <p className={className}>{state}</p>\n    )\n}","import React from \"react\";\nimport {ScreenKeyboard} from \"./ScreenKeyboard\";\nimport {ButtonConfirmNumber} from \"./ButtonConfirmNumber\";\nimport {AgreeCheckbox} from \"./AgreeCheckbox\";\nimport {Phone} from \"./Phone\";\n\nexport function Panel(props) {\n    const {activeElem, phoneNumber, valid} = props;\n    return(\n        <div className={'Panel'}>\n            <p className={'panelHeader'}>Введите ваш номер мобильного телефона</p>\n            <Phone phoneNumber={phoneNumber} valid={valid}/>\n            <p className={'infoText'}>и с Вами свяжется наш менеждер для дальнейшей консультации</p>\n            <ScreenKeyboard activeElem={activeElem} phoneNumber={phoneNumber} />\n            {(valid === false && phoneNumber.length === 10 && <p className={'falseValid'}>Неверно введён номер</p>)\n                || <AgreeCheckbox activeElem={activeElem} checkedAgree={props.checkedAgree} setCheckedAgree={props.setCheckedAgree}/>}\n            <ButtonConfirmNumber activeElem={activeElem}\n                                 checkedAgree={props.checkedAgree}\n                                 phoneNumber={phoneNumber}\n                                 valid={valid}/>\n        </div>\n    )\n}","import React, {useEffect, useRef} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport function CancelButton(props) {\n    const ref = useRef(null);\n\n    const {activeElem} = props;\n\n    useEffect(() => {\n        if (ref.current !== null) ref.current.focus();\n    }, [activeElem]);\n\n    return (\n        <Link\n            ref={(activeElem === 'CancelButton') ? ref : null}\n            className={'CancelButton'} to={'/'}\n        />\n    )\n}","import React, {useCallback, useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport './css/index.css'\nimport {Panel} from \"./Panel\";\nimport {CancelButton} from \"./CancelButton\";\nimport {\n    arrowDownAction,\n    arrowLeftAction,\n    arrowRightAction,\n    arrowUpAction, setActiveElement,\n} from \"../../store/screenKeyboardReducer\";\nimport {addNumber, deleteNumber} from \"../../store/phoneNumberReducer\";\nimport {useHistory} from \"react-router-dom\";\nimport {requestValidNumber} from \"../../store/validNumberReducer\";\n\n\n// навигация с помощью клавиш клавиатуры осуществляется по всей странице,\n// включая саму экранную клавиатуру, кнопки checkbox, клавишу подтверждения и клавишу выхода со страницы\n\nexport function ScreenKeyboardPage() {\n    const phoneNumber = useSelector((state) => state.phoneNumber);\n    const {section, activeElem} = useSelector((state) => state.screenKeyboard);\n    const validNumber = useSelector((state) => state.validNumber);\n    const [checkedAgree, setCheckedAgree] = useState(false);\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    // Здесь мы отслеживаем какие клавиши были нажаты\n    // логика обработки нажатий хранится в redux\n    const keyDownHandle = useCallback((e) => {\n        // нажатие клавиш стрелок\n        if (e.key === 'ArrowRight') dispatch(arrowRightAction());\n        if (e.key === 'ArrowLeft') dispatch(arrowLeftAction());\n        if (e.key === 'ArrowUp') dispatch(arrowUpAction());\n        if (e.key === 'ArrowDown') dispatch(arrowDownAction());\n\n        // нажатие Enter\n        if (e.key === 'Enter') {\n            if (section === 'keyboards') {\n                (activeElem === 'стереть') ? dispatch(deleteNumber()) : dispatch(addNumber(activeElem));\n            }\n            if (section === 'radio') return setCheckedAgree((!checkedAgree));\n            if (section === 'confirmNumber' && checkedAgree && phoneNumber.length === 10) {\n                return history.push('/slider');\n            }\n        }\n        // нажатие клавиш с цифрами\n        if (!isNaN(Number(e.key)) && e.code !== 'Space') {\n            if (phoneNumber.length === Number(10)) return;\n            dispatch(setActiveElement({section: 'keyboards', activeElem: Number(e.key)}));\n            dispatch(addNumber(Number(e.key)));\n            return;\n        }\n\n        // нажатие пробела\n        if (e.code === 'Space' && e.key === ' ' && phoneNumber.length > Number(0)) return dispatch(deleteNumber());\n\n    }, [activeElem, checkedAgree, dispatch, history, phoneNumber.length, section]);\n\n    // Здесь делаем запрос на валидацию\n    const validRequest = useCallback(() => {\n        dispatch(requestValidNumber(Number(phoneNumber.join(''))))\n    }, [dispatch, phoneNumber])\n\n    useEffect(() => {\n        if (phoneNumber.length === 10) {\n            validRequest()\n        }\n    }, [phoneNumber.length, validRequest]);\n\n    // Здесь мы отслеживаем нажатие клавиш на этой странице\n    useEffect(() => {\n        document.addEventListener('keydown', keyDownHandle);\n        return () => document.removeEventListener('keydown', keyDownHandle);\n    }, [keyDownHandle]);\n\n    return (\n        <div className={'ScreenKeyboardPage'}>\n            <Panel activeElem={activeElem}\n                   phoneNumber={phoneNumber}\n                   checkedAgree={checkedAgree}\n                   setCheckedAgree={setCheckedAgree}\n                   valid={(validNumber.data) ? validNumber.data.valid : null}\n            />\n            <div className={'ImageInfoBlock'}/>\n            <CancelButton activeElem={activeElem}/>\n            <img className={'qrCodeInfo'} src={'../qrCodeInfo.png'} alt=\"qr-code\"/>\n        </div>\n    )\n}","import React, {useCallback, useEffect, useMemo, useState} from \"react\";\nimport './css/index.css';\nimport {useHistory} from \"react-router-dom\";\n\nexport function SliderPage() {\n    const images = useMemo(() => {\n        return ['../img1.png', '../img2.png', '../img3.png'];\n    }, []);\n\n    const [image, setImage] = useState(images[0]);\n    const [buttonLeftClassName, setButtonLeftClassName] = useState('button leftWhite');\n    const [buttonRightClassName, setButtonRightClassName] = useState('button rightBlack');\n    const history = useHistory();\n    const index = images.findIndex((elem) => elem === image);\n    const countImages = images.length - 1;\n\n    useEffect(() => {\n        if (index === Number(0)) {\n            if (buttonLeftClassName !== 'button leftWhite') setButtonLeftClassName('button leftWhite');\n            return;\n        }\n        if (index === countImages) {\n            if (buttonRightClassName !== 'button rightWhite') setButtonRightClassName('button rightWhite');\n            return;\n        }\n        if (buttonRightClassName !== 'button rightBlack') setButtonRightClassName('button rightBlack');\n        if (buttonLeftClassName !== 'button rightBlack') setButtonLeftClassName('button rightBlack');\n    }, [buttonLeftClassName, buttonRightClassName, countImages, index]);\n\n    const handleLeftClick = useCallback(() => {\n        if (index !== Number(0)) {\n            setImage(images[index - 1]);\n        }\n    }, [images, index]);\n\n    const handleRightClick = useCallback(() => {\n        if (index !== countImages) {\n            setImage(images[index + 1]);\n        }\n    }, [countImages, images, index]);\n\n    const keyDownHandle = useCallback((e) => {\n        if (e.key === 'ArrowRight') handleRightClick();\n        if (e.key === 'ArrowLeft') handleLeftClick();\n    }, [handleLeftClick, handleRightClick]);\n\n    // Здесь мы отслеживаем нажатие клавиш на этой странице\n    useEffect(() => {\n        document.addEventListener('keydown', keyDownHandle);\n        return () => document.removeEventListener('keydown', keyDownHandle);\n    }, [keyDownHandle]);\n\n    return (\n        <div className={'SliderPage'}>\n            <img className={'imageSlider'} src={image} alt=\"party\"/>\n            <div className={'arrowsBlock'}>\n                <button className={buttonLeftClassName} onClick={handleLeftClick}/>\n                <button className={buttonRightClassName} onClick={handleRightClick}/>\n            </div>\n            <button className={'cancel'} onClick={() => history.push('/')}/>\n        </div>\n    )\n}","import {Provider} from \"react-redux\";\nimport {store} from \"./store\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport {PromoPage} from \"./components/promoPage/PromoPage\";\nimport {ScreenKeyboardPage} from \"./components/screenKeyboardPage/ScreenKeyboardPage\";\nimport './App.css';\nimport {SliderPage} from \"./components/sliderPage/SliderPage\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Provider store={store}>\n                    <div className={'screenWrapper'}>\n                        <div className={'screen'}>\n                            <Switch>\n                                <Route path={'/keyboard-screen'}>\n                                    <ScreenKeyboardPage/>\n                                </Route>\n                                <Route path={'/slider'}>\n                                    <SliderPage/>\n                                </Route>\n                                <Route path={'/'}>\n                                    <PromoPage/>\n                                </Route>\n                            </Switch>\n                        </div>\n                    </div>\n                </Provider>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}